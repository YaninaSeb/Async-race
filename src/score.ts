const score = `
Оценка: 180/190
1) Базовая структура [25/25]:
 -На сайте должно быть два вида: "Гараж" и "Победители" (5/5)
 -Представление "Гараж" должно содержать его название, номер страницы и полное количество объектов в базе данных (сколько машин у пользователя в гараже) (5/5)
 -Представление «Победители» должно содержать его название, номер страницы и полное количество элементов в базе данных (сколько записей содержит таблица победителей) (5/5)
 -Состояние просмотра должно сохраняться, когда пользователь переключается с одного представления на другое. Например, номер страницы не должен сбрасываться, элементы управления вводом должны содержать то, что они содержали до переключения и т. д. (10/10)
2) Вид "Гараж" [50/50]:
 -Пользователь должен иметь возможность создавать, обновлять, удалять автомобили и просматривать список автомобилей. У автомобиля всего два атрибута: «имя» и «цвет». Для операции "удалить" автомобиль должен быть удален как из таблицы "гараж", так и из таблицы "победителей" (15/15)
 -Пользователь должен иметь возможность выбрать любой цвет из палитры RGB, и увидеть изображение автомобиля, окрашенного в выбранный цвет и название автомобиля (10/10)
 -Рядом с изображением автомобиля должны быть кнопки для обновления его атрибутов или удаления (5/5)
 -На виде "Гараж" должна быть пагинация (7 машин на одной странице) (10/10)
 =Должна быть кнопка для создания случайных машин (100 машин за клик). Название должно быть собрано из двух случайных частей, например "Tesla" + "Model S", или "Ford" + "Mustang" (не менее 10 разных названий для каждой части). Цвет также должен генерироваться случайным образом (10/10)
3) Автомобильная анимация [50/50]:
 -Рядом с изображением автомобиля должны быть кнопки запуска/остановки двигателя автомобиля (5/5)
 -Пользователь нажимает кнопку запуска двигателя -> пользовательский интерфейс ожидает ответа о скорости автомобиля -> анимирует автомобиль и делает еще один запрос на вождение. В случае, если API вернуло ошибку 500, анимацию автомобиля следует остановить (20/20)
 -Пользователь нажимает кнопку остановки двигателя -> пользовательский интерфейс ожидает ответа на остановку двигателя -> автомобиль возвращается на исходное место (5/5)
 -Кнопка запуска двигателя должна быть отключена, если автомобиль уже находится в режиме движения. Так же как и кнопка остановки двигателя должна быть отключена, когда автомобиль стоит на исходном месте (5/5)
 -Автомобильная анимация должна нормально работать на любом экране (наименьший размер экрана — 500 пикселей) (15/15)
4) Анимация гонки [30/30]:
 -Должна быть кнопка для начала гонки. После того, как пользователь нажмет эту кнопку, все автомобили на текущей странице начнут движение (10/10)
 -Должна быть кнопка для сброса расы. После того, как пользователь нажмет эту кнопку, все машины вернутся на исходные места (10/10)
 -После того, как какая-то машина финиширует, первый пользователь должен увидеть сообщение, содержащее название машины, которое показывает, какая машина выиграла (10/10)
5) Представление «Победители» [25/35]:
 -После того, как какая-то машина выиграла, она должна отображаться в таблице "Просмотр победителей" (10/10)
 -Должна быть нумерация страниц (10 победителей на одной странице) (5/5)
 -Таблица должна содержать следующие столбцы: «№», «Изображение автомобиля», «Название автомобиля», «Количество побед», «Лучшее время в секундах» (названия столбцов могут отличаться). Если один и тот же автомобиль выигрывает более одного раза, количество побед должно быть увеличено, а лучшее время должно быть сохранено, только если оно лучше сохраненного (10/10)
 -Пользователь должен иметь возможность сортировать автомобили по количеству побед и лучшему времени (ASC, DESC) (0/10)
 `;

 console.log(score);
 